---
layout: post
title: css2.1文档和《css权威指南》笔记
---

##摘要
`html`,`css`,`javascript`这三个web前端开发的基础技术可以说构成所谓的`MVC`架构。model是html，view是指css，control就是js。现在自己属于web开发的beginer，不应该觉得前端开发入门快，于是就急于速成，“css就那么点东西”虽然不错，但若要应用好和理解清楚却也是不容易。在weibo上看到很多人喊：“不要有前端后台的分工”，自己这方面理解也不是很深，也希望多多学习能有所理解。这几天都在忙于找实习，发现自己的技术过于菜鸟，应聘大公司的实习岗位真的比不上人家。这也是现在比较苦恼的。现如今也是无路可退了，那就一路走到底了。

##The CSS 2.1 processing model
文档中定义了一般的css的处理模型，但是每种浏览器核心的处理方式不同，于是造成了各种的不兼容问题。参看下[The CSS 2.1 processing model][1],我的理解就是：根据css源文件建立文档树，方法就是根据选择器的正则表达式匹配到文档树上，（文档树可能已经是html的dom树，比如webkit就是将css挂在dom tree上生成render tree），根据规则确定其层叠和继承。然后根据树渲染画布（忽略了media这个东西，因为我还不是很理解）文档还定义了css的定位模型。[CSS 2.1 addressing model][1],说明各种选择器的定位。根据上述的理解，css的原理是很简单的。参看一下[浏览器的工作原理][2]。

##Visual formatting model
看英文文档还真是略难啊！但主要是能把各种术语和原理理解好。
视觉格式化模型，这个模型主要是规定了浏览器对视觉媒体如何处理文档树。根据[box model][3],文档树的每个元素都会生成0或更多的框，框的布局根据下面的原则：

>box dimensions and type.
>positioning scheme (normal flow, float, and absolute positioning).
>relationships between elements in the document tree.
>external information (e.g., viewport size, intrinsic dimensions of images, etc.).

###包含块
每个包含块都是相对于其包含块摆放的。
这篇文章写得不错：[详解包含块][4]

###一切都是box
`block-level element`块级元素，normal flow中占领整行，类似p,h1,div。可以设置`display:block|list-item|table`来生成块级元素。

`block-level boxes`块级框，块级元素会生成一个块级框。参与到bfc中。“block-level box一定会产生block formatting context”是错误的，block-level box须通过设置如overflow不为visible(IE6/7无效，可以设zoom)、float不为none等等来创建block formatting context。

`block container box`容器框，不是只包含块级框，就是只建立inline formatting context.可以理解是一个大盒子，里面能放小盒子。于是就出现了`Anonymous block boxes`，因为块容器框出现了`block-level boxes`，就会迫使它只能包含块级框了。注意：non-replaced inline blocks and non-replaced table cells are block containers。

相应的，就有`行内元素`和`行框`的概念。在下面介绍！

参考：[知乎问答][5]
###水平格式化
参看[文档][6]
这部分要理解的是：

    inline, non-replaced elements
    inline, replaced elements
    block-level, non-replaced elements in normal flow
    block-level, replaced elements in normal flow
    floating, non-replaced elements
    floating, replaced elements
    absolutely positioned, non-replaced elements
    absolutely positioned, replaced elements
    'inline-block', non-replaced elements in normal flow
    'inline-block', replaced elements in normal flow

##戞然尔止
我这样写blog的确不好，没有一个明确的命题，只是想用这个方式督促自己认真耐心的看文档，但是对于blog来说却不好了，所以这里先停止，我以后再一个topic一个topic的补充。







[1]: http://www.w3.org/TR/CSS2/intro.html
[2]: http://www.cnblogs.com/cnwebdeveloper/articles/2234423.html
[3]: http://www.w3.org/TR/CSS2/box.html
[4]: http://www.smallni.com/containing-block/
[5]: http://www.zhihu.com/question/20086234
[6]:http://www.w3.org/TR/CSS2/visudet.html#Computing_widths_and_margins
